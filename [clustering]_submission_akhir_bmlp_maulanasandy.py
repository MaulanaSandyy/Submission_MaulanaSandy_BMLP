# -*- coding: utf-8 -*-
"""[Clustering]_Submission_Akhir_BMLP_MaulanaSandy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZgaAhgG04m8eoL9lGf1zmCzVMhAnE00o

# **1. Perkenalan Dataset**

Tahap pertama, Anda harus mencari dan menggunakan dataset **tanpa label** dengan ketentuan sebagai berikut:

1. **Sumber Dataset**:  
   Dataset dapat diperoleh dari berbagai sumber, seperti public repositories (*Kaggle*, *UCI ML Repository*, *Open Data*) atau data primer yang Anda kumpulkan sendiri.
   
2. **Ketentuan Dataset**:
   - **Tanpa label**: Dataset tidak boleh memiliki label atau kelas.
   - **Jumlah Baris**: Minimal 1000 baris untuk memastikan dataset cukup besar untuk analisis yang bermakna.
   - **Tipe Data**: Harus mengandung data **kategorikal** dan **numerikal**.
     - *Kategorikal*: Misalnya jenis kelamin, kategori produk.
     - *Numerikal*: Misalnya usia, pendapatan, harga.

3. **Pembatasan**:  
   Dataset yang sudah digunakan dalam latihan clustering (seperti customer segmentation) tidak boleh digunakan.
"""

#maulana sandy

"""# **2. Import Library**

Pada tahap ini, Anda perlu mengimpor beberapa pustaka (library) Python yang dibutuhkan untuk analisis data dan pembangunan model machine learning.
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.decomposition import PCA
from yellowbrick.cluster import SilhouetteVisualizer, KElbowVisualizer

"""# **3. Memuat Dataset**

Pada tahap ini, Anda perlu memuat dataset ke dalam notebook. Jika dataset dalam format CSV, Anda bisa menggunakan pustaka pandas untuk membacanya. Pastikan untuk mengecek beberapa baris awal dataset untuk memahami strukturnya dan memastikan data telah dimuat dengan benar.

Jika dataset berada di Google Drive, pastikan Anda menghubungkan Google Drive ke Colab terlebih dahulu. Setelah dataset berhasil dimuat, langkah berikutnya adalah memeriksa kesesuaian data dan siap untuk dianalisis lebih lanjut.
"""

dataframe = pd.read_csv('Customers.csv')

"""# **4. Exploratory Data Analysis (EDA)**

Pada tahap ini, Anda akan melakukan **Exploratory Data Analysis (EDA)** untuk memahami karakteristik dataset. EDA bertujuan untuk:

1. **Memahami Struktur Data**
   - Tinjau jumlah baris dan kolom dalam dataset.  
   - Tinjau jenis data di setiap kolom (numerikal atau kategorikal).

2. **Menangani Data yang Hilang**  
   - Identifikasi dan analisis data yang hilang (*missing values*). Tentukan langkah-langkah yang diperlukan untuk menangani data yang hilang, seperti pengisian atau penghapusan data tersebut.

3. **Analisis Distribusi dan Korelasi**  
   - Analisis distribusi variabel numerik dengan statistik deskriptif dan visualisasi seperti histogram atau boxplot.  
   - Periksa hubungan antara variabel menggunakan matriks korelasi atau scatter plot.

4. **Visualisasi Data**  
   - Buat visualisasi dasar seperti grafik distribusi dan diagram batang untuk variabel kategorikal.  
   - Gunakan heatmap atau pairplot untuk menganalisis korelasi antar variabel.

Tujuan dari EDA adalah untuk memperoleh wawasan awal yang mendalam mengenai data dan menentukan langkah selanjutnya dalam analisis atau pemodelan.

#***1. Memahami Struktur Data***
"""

print("Dataset Info:")
print(dataframe.info())

print("Initial Rows:")
print(dataframe.head())

dataframe.describe()

"""#***2. Menangani Data yang Hilang***"""

# Handling Missing Values
dataframe.dropna(inplace=True)

"""#***3 dan 4 Analisis Distribusi dan Korelasi dan Visualisasi Data***"""

def plot_distribution(data, features):
    data[features].hist(figsize=(12, 8))
    plt.show()

plot_distribution(dataframe, ['Age', 'Annual Income ($)', 'Spending Score (1-100)'])

sns.heatmap(dataframe.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

"""# **5. Data Preprocessing**

Pada tahap ini, data preprocessing adalah langkah penting untuk memastikan kualitas data sebelum digunakan dalam model machine learning. Data mentah sering kali mengandung nilai kosong, duplikasi, atau rentang nilai yang tidak konsisten, yang dapat memengaruhi kinerja model. Oleh karena itu, proses ini bertujuan untuk membersihkan dan mempersiapkan data agar analisis berjalan optimal.

Berikut adalah tahapan-tahapan yang bisa dilakukan, tetapi **tidak terbatas** pada:
1. Menghapus atau Menangani Data Kosong (Missing Values)
2. Menghapus Data Duplikat
3. Normalisasi atau Standarisasi Fitur
4. Deteksi dan Penanganan Outlier
5. Encoding Data Kategorikal
6. Binning (Pengelompokan Data)

Cukup sesuaikan dengan karakteristik data yang kamu gunakan yah.
"""

encoder = LabelEncoder()
dataframe['Gender'] = encoder.fit_transform(dataframe['Gender'])
dataframe['Profession'] = encoder.fit_transform(dataframe['Profession'])

scaling_columns = ['Age', 'Annual Income ($)', 'Spending Score (1-100)']
scaler = StandardScaler()
dataframe[scaling_columns] = scaler.fit_transform(dataframe[scaling_columns])
dataframe.head()

"""# **6. Pembangunan Model Clustering**

## **a. Pembangunan Model Clustering**

Pada tahap ini, Anda membangun model clustering dengan memilih algoritma yang sesuai untuk mengelompokkan data berdasarkan kesamaan. Berikut adalah **rekomendasi** tahapannya.
1. Pilih algoritma clustering yang sesuai.
2. Latih model dengan data menggunakan algoritma tersebut.
"""

def train_kmeans(data, clusters=3):
    model = KMeans(n_clusters=clusters, random_state=42)
    model.fit(data)
    return model

cluster_model = train_kmeans(dataframe, clusters=4)
dataframe['ClusterGroup'] = cluster_model.labels_

"""## **b. Evaluasi Model Clustering**

Untuk menentukan jumlah cluster yang optimal dalam model clustering, Anda dapat menggunakan metode Elbow atau Silhouette Score.

Metode ini membantu kita menemukan jumlah cluster yang memberikan pemisahan terbaik antar kelompok data, sehingga model yang dibangun dapat lebih efektif. Berikut adalah **rekomendasi** tahapannya.
1. Gunakan Silhouette Score dan Elbow Method untuk menentukan jumlah cluster optimal.
2. Hitung Silhouette Score sebagai ukuran kualitas cluster.
"""

sil_score = silhouette_score(dataframe, cluster_model.labels_)
print(f"Silhouette Score: {sil_score}")

"""## **d. Visualisasi Hasil Clustering**

Setelah model clustering dilatih dan jumlah cluster optimal ditentukan, langkah selanjutnya adalah menampilkan hasil clustering melalui visualisasi.

Berikut adalah **rekomendasi** tahapannya.
1. Tampilkan hasil clustering dalam bentuk visualisasi, seperti grafik scatter plot atau 2D PCA projection.
"""

elbow_visual = KElbowVisualizer(KMeans(random_state=42), k=(2, 10))
elbow_visual.fit(dataframe)
elbow_visual.show()

pca_transform = PCA(n_components=2)
pca_data = pca_transform.fit_transform(dataframe)
sns.scatterplot(x=pca_data[:, 0], y=pca_data[:, 1], hue=dataframe['ClusterGroup'], palette='viridis')
plt.title('PCA Cluster Visualization')
plt.show()

"""## **e. Analisis dan Interpretasi Hasil Cluster**

Setelah melakukan clustering, langkah selanjutnya adalah menganalisis karakteristik dari masing-masing cluster berdasarkan fitur yang tersedia.

Berikut adalah **rekomendasi** tahapannya.
1. Analisis karakteristik tiap cluster berdasarkan fitur yang tersedia (misalnya, distribusi nilai dalam cluster).
2. Berikan interpretasi: Apakah hasil clustering sesuai dengan ekspektasi dan logika bisnis? Apakah ada pola tertentu yang bisa dimanfaatkan?
"""

for cluster_label in dataframe['ClusterGroup'].unique():
    cluster_data = dataframe[dataframe['ClusterGroup'] == cluster_label]
    print(f"\nKarakteristik Cluster {cluster_label}:")
    print(cluster_data.describe())  # Statistik deskriptif
    # Analisis lebih lanjut dapat dilakukan pada kolom spesifik, misal:
    print(f"Rata-rata annual income di cluster {cluster_label}: {cluster_data['Annual Income ($)'].mean()}")

"""**Cluster 0: Keluarga Hemat**

Karakteristik:

1. Pendapatan: Rata-rata pendapatan positif (0.211), lebih tinggi dari Cluster 2 tetapi masih lebih rendah dari Cluster 1.
2. Usia: Rata-rata usia mendekati nol (-0.014), artinya kelompok ini terdiri dari gabungan individu muda dan dewasa tanpa dominasi usia tertentu.
3. Kebiasaan Belanja: Sedikit negatif (-0.050), mencerminkan gaya belanja hemat atau konservatif.
4. Ukuran Keluarga: Rata-rata 3.92 anggota, menunjukkan keluarga besar.
5. Pengalaman Kerja: Rata-rata pengalaman kerja hanya 3.83 tahun, menunjukkan mayoritas pekerja baru atau dengan pengalaman terbatas.
6. Strategi: Kelompok ini ideal untuk produk rumah tangga yang hemat atau layanan keluarga seperti paket diskon. Mereka cenderung merespons baik terhadap promosi harga rendah.

**Cluster 1: Konsumen Premium**

Karakteristik:

1. Pendapatan: Tertinggi di antara semua cluster (0.244), mencerminkan daya beli yang kuat.
2. Usia: Rata-rata sedikit positif (0.027), menunjukkan dominasi dewasa muda.
3. Kebiasaan Belanja: Hampir nol (0.012), artinya mereka memiliki kebiasaan belanja yang seimbang, tidak terlalu boros atau hemat.
4. Ukuran Keluarga: Rata-rata 3.94 anggota, sedikit lebih besar dari rata-rata dataset.
5. Pengalaman Kerja: Tertinggi di semua cluster (4.67 tahun), mencerminkan kelompok ini memiliki profesional yang lebih matang.
6. Strategi: Kelompok ini cocok untuk pemasaran produk atau layanan premium seperti kendaraan, barang elektronik, atau program loyalitas pelanggan. Daya beli mereka memungkinkan fokus pada produk berkualitas tinggi.

**Cluster 2: Konsumen Berdaya Beli Rendah**

Karakteristik:

1. Pendapatan: Terendah (-0.663), jauh di bawah rata-rata dataset.
2. Usia: Negatif (-0.137), menunjukkan mayoritas terdiri dari individu muda.
3. Kebiasaan Belanja: Hampir nol (0.005), mencerminkan gaya belanja yang sangat konservatif atau hemat.
4. Ukuran Keluarga: Rata-rata 3.05 anggota, lebih kecil dari kelompok lain.
5. Pengalaman Kerja: Rendah (4.11 tahun), mencerminkan sebagian besar adalah pekerja baru.
6. Strategi: Fokus pada produk terjangkau atau promosi diskon besar. Layanan berbasis edukasi atau komunitas juga dapat menarik perhatian mereka karena daya beli mereka rendah.

**Cluster 3: Keluarga Besar dengan Stabilitas Pengeluaran**

Karakteristik:

1. Pendapatan: Positif (0.205), hampir sama dengan Cluster 0, menunjukkan penghasilan stabil.
2. Usia: Rata-rata sedikit positif (0.123), mencerminkan kelompok ini sebagian besar terdiri dari individu dewasa.
3. Kebiasaan Belanja: Positif kecil (0.032), menunjukkan kebiasaan belanja yang sedikit lebih aktif dibanding cluster lainnya.
4. Ukuran Keluarga: Tertinggi di antara semua cluster (4.12 anggota), menunjukkan keluarga besar.
5. Pengalaman Kerja: 3.75 tahun, mencerminkan mayoritas memiliki pengalaman kerja sedang.
6. Strategi: Cluster ini cocok untuk produk dan layanan yang berorientasi pada keluarga besar, seperti asuransi keluarga, peralatan rumah tangga, atau paket wisata. Mereka juga tertarik pada layanan berbasis pengalaman seperti hiburan keluarga.

**Kesimpulan Umum**

1. Cluster 0: Fokus pada produk keluarga besar dengan harga hemat dan promosi ringan.
2. Cluster 1: Ideal untuk pemasaran produk premium dan layanan eksklusif.
3. Cluster 2: Targetkan produk terjangkau dengan promosi besar.
4. Cluster 3: Utamakan kebutuhan keluarga besar dengan layanan berbasis pengalaman.

# **7. Mengeksport Data**

Simpan hasilnya ke dalam file CSV.
"""

dataframe.to_csv('Clustered_Customers.csv', index=False)